Цариков В.О.

0.Если возможно, создать подкласс для класса. Ответ обосновать.
public class Policy {
	private int a;
	Policy(int a){		
	this.a=a;}}

public class Politician extends Policy {
	Politician(int a) {
		super(a);
	}
}

_________________________________________________________________

1. В строки, помеченные комментариями //1 и //2, записать оптимальные вызовы метода execute()
	
public class Hope {		
public static void execute(){}		
private void taste(){execute();}}
	
public class Dream {	
private Float taste(){Hope.execute();}}
_________________________________________________________________

2. Записать реализацию интерфейса	
interface Application {
void hello();}

public class Test implements Application {
public static void hello(){
System.out.println("Hello!");}}
_________________________________________________________________

3.Если возможно, создать подкласс абстрактного класса. Ответ обосновать
	
abstract class Cook {	
protected abstract void sell();}
 
public class MainCook extends Cook{
protected void sell(){}}
_________________________________________________________________

4.	
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + a;
		result = prime * result + b;
		return result;
_________________________________________________________________

5.Реализовать метод equals для класса

	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Bus other = (Bus) obj;
		if (type == null) {
			if (other.type != null)
				return false;
		} else if (!type.equals(other.type))
			return false;
		return true;}
__________________________________________________________________

6. Дана строка вида String num = "1234"; преобразовать к int n четырьмя спо-
собами.
		String num = "1234";
		int n = Integer.parseInt(num);
		int h = Integer.valueOf(num).intValue();
		int i = new Integer(num);
		int m = Integer.decode(num);

